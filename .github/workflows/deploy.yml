name: Deploy to Chromatic and NPM

on:
  push:
    branches:
      - main

jobs:
  # Build and Test Job
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 최신 LTS 버전으로 변경

      - name: Check current directory structure
        run: |
          echo "Current directory structure:"
          ls -la packages/ui/src/components/
          echo "Check for button directory:"
          ls -la packages/ui/src/components/button || echo "button directory not found"

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install
      - name: Build packages
        run: pnpm --filter="./packages/ui" build

      # - name: Run tests
      #   run: pnpm test
      - name: Build Storybook
        run: pnpm --filter="./packages/ui" build-storybook

  # Deploy Storybook to Chromatic
  chromatic:
    name: Run Chromatic
    runs-on: ubuntu-latest
    needs: build # build가 성공해야 chromatic 실행됨

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #전체 Git히스토리 가져오기

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 다른 job과 통일

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          # 👇 Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN}}
          workingDir: packages/ui
          exitZeroOnChanges: true # 변경 사항이 있더라도 실패하지 않음

  # Apply changesets and npm registry
  release:
    permissions:
      contents: write # 저장소 콘텐츠에 대한 쓰기 권한 부여
      packages: write # 패키지에 대한 쓰기 권한 (필요한 경우)
      pull-requests: write # PR 생성 권한

    name: Release
    runs-on: ubuntu-latest
    needs: [build, chromatic]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm --filter="./packages/*" build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
