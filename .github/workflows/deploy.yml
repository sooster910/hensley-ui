name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# 전역 권한 설정 추가git
permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Turborepo CLI
        run: pnpm install -g turbo

      - name: Run Turbo Lint
        run: turbo run lint --filter="[origin/main]..." --dry-run

      - name: Type check
        run: pnpm type-check

      - name: Run tests
        run: pnpm test

      - name: Build packages
        run: pnpm build

  chromatic:
    name: Deploy Storybook
    runs-on: ubuntu-latest
    needs: validate #jobs의 validate가 성공해야 실행되도록 설정

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #전체 Git히스토리 가져오기

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      - name: Build Storybook
        run: pnpm build-storybook

      - name: Verify react-button build
        run: |
          echo "Checking react-button build output..."
          ls -la packages/ui/react-button/dist/ || echo "No dist folder found"
          cat packages/ui/react-button/package.json | grep -E "(main|module|exports)" || echo "No entry points found"

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN}}
          workingDir: packages/ui
          exitZeroOnChanges: false # 변경 사항이 있으면 다음동작 실행 x

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [validate, chromatic]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore: version packages"
          title: "chore: version packages"
          publish: pnpm ci:publish

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
