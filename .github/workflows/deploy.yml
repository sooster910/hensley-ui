name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# 전역 권한 설정 추가git
permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Lint
        run: pnpm --filter="./packages/ui" lint

      - name: Type check
        run: pnpm --filter="./packages/ui" type-check

      - name: Run tests
        run: pnpm --filter="./packages/ui" test

      - name: Build ui packages
        run: pnpm --filter="./packages/ui" build

  chromatic:
    name: Deploy Storybook
    runs-on: ubuntu-latest
    needs: validate #jobs의 validate가 성공해야 실행되도록 설정

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #전체 Git히스토리 가져오기

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN}}
          workingDir: packages/ui
          exitZeroOnChanges: false # 변경 사항이 있으면 다음동작 실행 x

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [validate, chromatic]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install

      - name: Pre-publish validation
        run: |
          echo "=== 1. 빌드 실행 ==="
          pnpm --filter="./packages/ui" build  # ← 항상 빌드!

          echo "=== 2. 빌드 결과 확인 ==="
          cd packages/ui

          echo "=== 3. npm pack 검증 ==="
          pack_output=$(npm pack --dry-run)
          echo "$pack_output"

          if [ -d "dist" ] && [ -f "dist/index.es.js" ]; then
            echo "✅ dist 폴더와 주요 빌드 파일들 모두 존재"
            echo "빌드된 파일 개수: $(find dist -type f | wc -l)"
            echo "✅ 빌드 및 검증 완료"
          else
            echo "❌ 필수 빌드 파일이 누락됨!"
            echo "현재 dist 상태:"
            [ -d "dist" ] && ls -la dist/ || echo "dist 폴더 없음"
            exit 1
          fi

          echo "=== 4. 디버깅: 현재 디렉토리 및 package.json 확인 ==="
          pwd
          ls -la
          cat package.json | grep -A 50 "scripts"

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore: version packages"
          title: "chore: version packages"
          publish: pnpm --filter="./packages/ui" ci:publish

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
